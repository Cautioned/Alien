name: 'publish'

on:
  push:
    branches:
      - release
  workflow_dispatch: # Allows manual triggering from the GitHub UI

# This workflow will trigger on each push to the `release` branch OR when manually dispatched.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v2.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libmpv-dev
        # webkitgtk 4.1 is for Tauri v2.

      # === End Platform Dependencies ===

      - name: install frontend dependencies
        run: npm ci # Use npm ci for cleaner installs in CI

      # === Build Frontend CSS ===
      - name: Build Tailwind CSS
        run: npm run build:css # Runs the build:css script from the root package.json

      # === Install MSYS2 for gendef/dlltool (Windows Only) ===
      - name: Install MSYS2
        if: matrix.platform == 'windows-latest'
        run: choco install msys2 --params "/InstallDir:C:\msys64" -y

      # === Add MSYS2 tools to PATH (Windows Only) ===
      - name: Add MSYS2 tools to PATH
        if: matrix.platform == 'windows-latest'
        run: echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh # Use powershell for this step

      # === MPV/Linker Setup ===
      - name: Install mpv versions (macOS)
        # Installs both arm64 (native) and x86_64 (via Rosetta)
        if: startsWith(matrix.platform, 'macos-')
        run: |
          echo "Installing mpv via Homebrew (native arch)..."
          brew install mpv 
          echo "Attempting to install x86_64 mpv via Rosetta..."
          arch -x86_64 brew install mpv 

      - name: Download libmpv-2.dll (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri 'https://cautioned.co/libmpv-2.dll' -OutFile 'src-tauri/libmpv-2.dll'
          echo "libmpv-2.dll downloaded to src-tauri/"
      
      - name: Generate MPV .lib file (Windows)
        if: matrix.platform == 'windows-latest'
        # Run AFTER installing MSYS2 and adding to PATH
        shell: powershell # Ensure powershell is used
        run: |
          .\src-tauri\generate-lib.ps1
          echo "MPV .lib file generated (hopefully)"
      # === End MPV/Linker Setup ===

      # === Write Private Key Secret to File ===
      - name: Write private key to file
        shell: bash
        run: echo "${{ secrets.TAURI_PRIVATE_KEY }}" > ./private.key
        env:
           TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      # === Verify Written Key File (DEBUG) ===
      - name: Check written key file
        shell: bash
        run: |
          echo "Checking ./private.key file..."
          ls -l ./private.key
          echo "First 3 lines:"
          head -n 3 ./private.key
          echo "--- End Check ---"

      # === Tauri Build and Release (Single Step) ===
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # --- Conditionally set MPV paths for macOS --- 
          MPV_LIB_PATH: ${{ startsWith(matrix.platform, 'macos-') && contains(matrix.args, 'aarch64') && '/opt/homebrew/lib' || (startsWith(matrix.platform, 'macos-') && contains(matrix.args, 'x86_64') && '/usr/local/lib' || '') }}
          RUSTFLAGS: ${{ startsWith(matrix.platform, 'macos-') && format('-L {0}', env.MPV_LIB_PATH) || '' }}
          LIBMPV_LIB_DIR: ${{ env.MPV_LIB_PATH }} # Build script uses this
          # --- Signing Keys --- 
          TAURI_PRIVATE_KEY: ./private.key # v2 key path
          TAURI_SIGNING_PRIVATE_KEY: ./private.key # v1 key path (for compatibility)
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }} # v2 password 
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }} # Also set v1 password var
        with:
          tagName: app-v__VERSION__ # The action automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true # Creates a draft release. Change to false to publish automatically.
          prerelease: false # Set to true if releasing pre-releases.
          includeUpdaterJson: true
          args: ${{ matrix.args }}
          # Note: Assumes `libmpv-2.dll` in `src-tauri/resources` (tauri.conf.json) is sufficient for bundling on Windows. 